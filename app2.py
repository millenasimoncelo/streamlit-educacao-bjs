import streamlit as st
import pandas as pd

st.set_page_config(
    page_title="Indicadores Educacionais ‚Ä¢ Bom Jesus da Serra",
    page_icon="üìä",
    layout="wide"
)

st.sidebar.title("Navega√ß√£o")
pagina = st.sidebar.radio(
    "Ir para:",
    ["In√≠cio", "Plano do App", "Bases de Dados", "Explora√ß√£o (placeholder)", "Sobre"]
)

if pagina == "In√≠cio":
    st.title("üìä Indicadores Educacionais de Bom Jesus da Serra ‚Äì BA")
    st.subheader("Autora: Millena Simoncelo de Lima")
    st.write("""
    Este √© um **prot√≥tipo** de web app em Streamlit para a disciplina **Cloud Computing** (P√≥s em Minera√ß√£o de Dados).
    **Tema:** an√°lise e visualiza√ß√£o de indicadores educacionais (IDEB, taxas de rendimento e adequa√ß√£o docente).
    """)
    st.info("Status: estrutura inicial criada. Pr√≥ximos passos: inserir dados e gr√°ficos nas se√ß√µes de Explora√ß√£o.")

elif pagina == "Plano do App":
    st.header("üó∫Ô∏è Plano do App (MVP e Expans√µes)")
    st.markdown("""
    **Objetivo:** disponibilizar um painel simples que consolide indicadores essenciais de aprendizagem e rendimento.

    **Entregas agora (MVP):**
    - Estrutura de navega√ß√£o e se√ß√µes.
    - Lista de bases de dados planejadas.
    - Espa√ßo reservado para tabelas e gr√°ficos.

    **Pr√≥ximas entregas (expans√µes):**
    - Carregar s√©ries hist√≥ricas de **IDEB** (Anos Iniciais/Finais).
    - Inserir **Taxas de Rendimento** (aprova√ß√£o, reprova√ß√£o, abandono).
    - Adicionar **Adequa√ß√£o da Forma√ß√£o Docente**.
    - Gr√°ficos de linhas e barras; compara√ß√µes por etapa/ano.
    - Download de CSVs e anota√ß√µes.
    """)

elif pagina == "Bases de Dados":
    st.header("üßæ Bases de Dados Planejadas")
    st.write("Lista das fontes que imagino utilizar:")
    fontes = pd.DataFrame([
        {"Fonte": "IDEB / SAEB (INEP)", "Uso previsto": "S√©ries hist√≥ricas por etapa; metas e resultados"},
        {"Fonte": "Censo Escolar (INEP)", "Uso previsto": "Taxas de rendimento; matr√≠culas; turmas"},
        {"Fonte": "Adequa√ß√£o da Forma√ß√£o Docente (INEP)", "Uso previsto": "Distribui√ß√£o por grupos de adequa√ß√£o"},
            ])
    st.dataframe(fontes, use_container_width=True)
    st.caption("Obs.: Nesta etapa, as bases est√£o apenas declaradas. A carga ocorrer√° nas pr√≥ximas vers√µes.")

elif pagina == "Explora√ß√£o (placeholder)":
    st.header("üîé Explora√ß√£o de Dados (placeholder)")
    st.write("""
    Quando os arquivos forem adicionados, os dados aparecer√£o aqui.
    Enquanto isso, voc√™ pode **carregar um CSV opcionalmente** para testar a visualiza√ß√£o.
    """)
    up = st.file_uploader("Enviar um CSV (opcional, para teste)", type=["csv"])
    if up is not None:
        df = pd.read_csv(up)
        st.subheader("Pr√©via do dataset enviado")
        st.dataframe(df.head(50), use_container_width=True)
        st.subheader("Dimens√µes")
        st.write(f"{df.shape[0]} linhas √ó {df.shape[1]} colunas")
        st.info("Gr√°ficos ser√£o adicionados aqui quando as colunas/medidas forem definidas.")
    else:
        st.warning("Nenhum arquivo enviado ainda. Use o seletor acima para testar com um CSV seu.")

elif pagina == "Sobre":
    st.header("‚ÑπÔ∏è Sobre")
    st.write("""
    **Autora:** Millena Simoncelo de Lima  
    **Curso:** P√≥s-gradua√ß√£o em Minera√ß√£o de Dados ‚Äî Disciplina: Cloud Computing  
    **Tecnologia:** Streamlit (Python)
    """)
    st.markdown(
        '<p style="font-size:0.95rem;color:#555;">Este app foi criado como primeiro exerc√≠cio de deploy; '
        'nas pr√≥ximas vers√µes, incluir√° dados do INEP (IDEB, Censo Escolar) e visualiza√ß√µes.</p>',
        unsafe_allow_html=True
    )